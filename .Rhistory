load('mnist.mat')
load('mnist.mat')
install.packages('mnist.mat')
installed.packages('mnist.mat')
load("mnist_all.mat")
install.packages("mnist_all.mat")
library(installr)
updateR()
library("mnist_all.mat")
updateR()
library(MNIST)
library(data/mnist_all.mat)
library(MNIST Handwritten Digits)
library(MNIST Handwritten)
library(mnist)
install.packages("mnist", repos = "https://cs.nyu.edu/~roweis/data/mnist_all.mat")
install.packages("mnist", repos = "https://cs.nyu.edu/~roweis/data/mnist_all.mat")
mnist_all <- read.csv("~/stat/mnist_all.mat", header=FALSE, comment.char="#")
View(mnist_all)
View(mnist_all)
View(mnist_all)
load("~/stat/mnist_all.mat")
View(mnist_all)
View(mnist_all)
View(mnist_all)
View(mnist_all)
summary(mnist_all.mat)
install.packages('mnist_all.mat',repos='http://cran.us.r-project.org')
install.packages('mnist_all.mat',repos='https://cs.nyu.edu/~roweis/data/mnist_all.mat')
mnist_all.mat
install.packages('mnist_all',repos='https://cs.nyu.edu/~roweis/data/mnist_all.mat')
install.packages('mnist',repos='https://cs.nyu.edu/~roweis/data/mnist_all.mat')
install.packages('mnis')
mnis
head(mnis)
head(mnis,10)
head(mnis,10)
mins
suammry(mins)
suammry(mnis)
mnis
mnis
?mnis
??mnis
mnis::mnis_all_members()
mnis::mnis_all_members
library(mnis)
remove.packages(mnis)
library("mnis", lib.loc="~/R/win-library/3.4")
remove.packages(mnis)
remove.packages("mnis", lib="~/R/win-library/3.4")
dfs<-read.csv("C:/Users/mahmo/Downloads/mnist_all.mat")
dfs<-read.csv("C:/Users/mahmo/Downloads/mnist_all.mat",sep=',')
dfs<-read.csv("C:/Users/mahmo/Downloads/mnist_all.mat",sep =",")
dfs<-read.table("C:/Users/mahmo/Downloads/mnist_all.mat",sep =",")
dfs<-read.table("C:/Users/mahmo/Downloads/mnist_all.mat")
install.packages('psych')
library(psych)
??mint
?mint
??minst
?minst
help minst
help (minst)
help ('minst)
help ('minst')
help ('minst')
help ('??minst')
minst
??minst
??psych
install.packages('MNIST')
??MNIST
summary(MNIST)
summary('MNIST')
summary('u')
library(MNIST)
library('MNIST')
describe(mydata_scales)
library(psych)
describe(mydata_scales)
describe.by(mydata_scales, mydata_conditions)
describe(iris)
describe.by(iris, mydata_conditions)
boxplot(iris)
cor(iris, use="complete.obs", method="pearson"
cor(iris, use="complete.obs", method="pearson"
cor(iris, use="complete.obs", method="pearson")
cor(iris, use="complete.obs", method="pearson")
cor(iris3, use="complete.obs", method="pearson")
cor(iris3, iris, use="complete.obs", method="pearson")
cor(1,2, use="complete.obs", method="pearson")
cor(iris)
x<-c(10 , 20, 40 ,60 ,70 ,80)
cor(x, use="complete.obs", method="pearson")
y<-c(85 , 664 ,89 ,90 ,66)
cor(x,y, use="complete.obs", method="pearson")
y<-c(85 ,64 ,89 ,90 ,66)
cor(x,y, use="complete.obs", method="pearson")
cor(x,y)
y<-c(85 ,64 ,89 ,10 ,20)
cor(x,y)
y<-c(85 ,64 ,89 ,10 ,20 , 60)
cor(x,y)
cor(x,y, use="complete.obs", method="pearson")
library(mnist)
install.packages("devtools")
devtools::install_github("jlmelville/mnist")
library(mnist)
library(mnist)
library(mnist)
library(mnist)
mnist <- download_mnist()
mnist_train <- head(mnist, 60000)
summary(minst)
summary("minst")
install.packages("mnist")
summary(mnist)
View(mnist)
View(mnist_train)
summary(mnist)
mnist
mnist
?pysch
?psych
??psych
r <- cor(bfi[1:200,1:10], use="pairwise") #find the correlations
f2 <- fa(r,2)
x <- list()
x$scores <- factor.scores(bfi[1:200,1:10],f2)
x$loadings <- f2$loadings
class(x) <- c('psych','fa')
biplot(x,main="biplot from correlation matrix and factor scores")
??mnist
View(mnist_train)
View(x)
??mnist
show_digit(df, n, col = grDevices::gray(12:1/12), ...)
show_digit(mnist, 5)
describe(mnist)
describe('mnist')
describe(mnist_train)
mydata<-mnist
describe(mydata)
??mnist_train
??mnist
mean(mnist)
v<-c(mnist)
mean(v)
list(mnist)
v<-list(mnist)
v
g
g
data.matrix(mnist)
data.matrix(mnist , rownames.force = "ahmed")
g<-data.matrix(mnist , rownames.force = "ahmed")
g=data.matrix(mnist)
g<-list(minst)
g<-list(mnist)
mean(g)
my_matrix<-matrix(mint,0)
my_matrix<-matrix(mnist,0)
my_matrix<-matrix(mnist,784)
my_matrix<-matrix(mnist , row(3) , col(4))
my_matrix<-matrix(mnist , row(4) , col(4))
my_matrix<-matrix(mnist , row=4 , col=4)
my_matrix<-matrix(mnist , nrow=4 , ncol=4)
??matrix
my_matrix<-matrix(mnist ,ncol=3)
v<-c(1:10)
my_matrix<-matrix(mnist ,ncol=5)
View(my_matrix)
my_matrix<-matrix(mnist ,nrow =5)
my<-matrix(mnist ,nrow =5)
View(my)
mnist[1:10]
??matrix
my[1:10]
my[1:5]
my<-matrix(mnist ,nrow =157)
mnist[1:10]
my[1:5]
my[1:10]
my[1:5]
my<-matrix(mnist , nrow =157)
mnist[1:10]
my[1:10]
my
View(my)
my<-matrix(mnist , nrow =5)
my
3 &2
2 & 3
2 & 3 -2
2&3-3
3&2-2
mnist[2,2]
mnist[393,393]
mnist[1:393]
mnist[100,393]
mnist[100:393]
mean(mnist[100:393])
median(mnist[100:393])
median(mnist["100":"393"])
df mnist
df(mnist)
show_digit(df, n, col = grDevices::gray(12:1/12), ...)
show_digit(df,n)
show_digit(mnist,5)
mnist_train <- head(mnist, 60000)
mnist_test <- tail(mnist, 10000)
View(mnist_test)
View(mnist_test)
mnist_train[1,6000]
mnist_train[1:6000]
pca <- prcomp(mnist_r1000[, 1:784], retx = TRUE, .rank = 2)
mean(mnist)
mnist_r1000 <- mnist_train[sample(nrow(mnist_train), 1000), ]
pca <- prcomp(mnist_r1000[, 1:784], retx = TRUE, .rank = 2)
View(pca)
View(pca)
median(pca)
mean(pca)
plot(pca$x[, 1:2], type = 'n')
text(pca$x[, 1:2], labels = mnist_r1000$Label, cex = 0.5,
col = rainbow(length(levels(mnist_r1000$Label)))[mnist_r1000$Label])
save(mnist, file = "mnist.Rda")
prcomp(mnist_train, scale.=TRUE)
prcomp(pca, scale.=TRUE)
prcomp(mnist_r1000, scale.=TRUE)
prcomp(mnist_train.active, scale = TRUE)
prcomp(mnist_train, scale = TRUE)
names(res.pca)
mnist_train[28,28]
mnist_train[0,0]
mnist_train[1,1]
mnist_train[1:28]
View(mnist_test)
show_digit(mnist, 5)
View(mnist_r1000)
show_digit(mnist_train, 5)
mnist_train
show_digit(mnist_train , 1)
mnist
mnist
mnist
??show_digit
??show_digit
mnist <- download_mnist()
show_digit(mnist, 5)
library('mnist')
show_digit(mnist_train , 1)
show_digit(mnist , 1)
show_digit(mnist_test , 1)
show_digit(mnist_train , 1)
show_digit(mnist , 100)
show_digit(mnist , 11)
show_digit(mnist , 100)
show_digit(mnist , 13)
show_digit(mnist , 3000)
mn<-show_digit(mnist , 3000)
mn
mn<-matrix[show_digit(mnist , 3000)]
matrix(mn)
require(grDevices)
require(grDevices) # for colours
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
image(z, axes = FALSE, main = "Math can be beautiful ...",
xlab = expression(cos(r^2) * e^{-r/6}))
contour(z, add = TRUE, drawlabels = FALSE)
# Volcano data visualized as matrix. Need to transpose and flip
# matrix horizontally.
image(t(volcano)[ncol(volcano):1,])
image(t(mnist))
x <- 10*(1:nrow(volcano))
y <- 10*(1:ncol(volcano))
image(x, y, volcano, col = terrain.colors(100), axes = FALSE)
contour(x, y, volcano, levels = seq(90, 200, by = 5),
add = TRUE, col = "peru")
axis(1, at = seq(100, 800, by = 100))
axis(2, at = seq(100, 600, by = 100))
box()
title(main = "Maunga Whau Volcano", font.main = 4)
x <- 10*(1:nrow(Capture001.png))
x <- 10*(1:nrow(Capture001))
View(z)
show_digit(df, n, col = grDevices::gray(12:1/12), ...)
show_digit(mnist_train, 4, col = grDevices::gray(12:1/12))
show_digit(mnist_train , 4)
show_digit(mnist_train, 4)
show_digit(mnist_train, 4 , col = grDevices::gray.colors(white))
show_digit(mnist_train, 4 , col = grDevices::gray.colors(12:10))
show_digit(mnist_train, 4 , col = grDevices::gray.colors(12:1/12))
show_digit(mnist_train, 4 , col = grDevices::gray.colors(12:1/14))
show_digit(mnist_train, 4 , col = grDevices::gray.colors(10:1/12))
show_digit(mnist_train, 4 , col = grDevices::gray.colors(10:1/12))
show_digit(mnist_train, 4 , col = grDevices::gray.colors(10:1/10))
show_digit(mnist_train, 4 , col = grDevices::gray.colors(10:2/10))
show_digit(mnist_train, 4 , col = grDevices::win.graph(10:2/10)
show_digit(mnist_train, 4 , col = grDevices::win.graph(10:2/10))
show_digit(mnist_train, 4 , col = grDevices::gray(12:1/12) , ...)
show_digit(mnist_train, 4 , col = grDevices::gray(12:1/12) , 'volcano')
show_digit(mnist_train, 4 , col = grDevices::gray(12:1/12) , volcano)
r
View(z)
mean(pca)
vcc<-mnist[1,1:785]
library('mnist')
vcc
show_digit(vcc, 1)
show_digit(mnist, 1)
show_digit(mnist, 2)
show_digit(mnist, 1)
vcc2<-mnist[2,1:785]
show_digit(vcc2, 1)
cor(vcc,vcc2)
?mnist
library(mnist)
str(mnist)
plot.mnist
plot.mnist()
str(mnist)
plot.mnist()
data(mnist)
test_check("mnist")
library(testthat)
library("testthat")
load_image_file <- function(conn) {
readBin(conn, 'integer', n=1, size=4, endian='big')
n = readBin(conn, 'integer', n=1, size=4, endian='big')
nrow = readBin(conn, 'integer', n=1, size=4, endian='big')
ncol = readBin(conn, 'integer', n=1, size=4, endian='big')
x = readBin(conn, 'integer', n=n*nrow*ncol, size=1, signed=F)
x = matrix(x,  ncol=nrow * ncol,  byrow=T)
close(conn)
return(x)
}
library(mnist)
mnist <- download_mnist()
detach("package:mnist", unload=TRUE)
show_digit(mnist, 5)
mnist_train <- head(mnist, 60000)
mnist_test <- tail(mnist, 10000)
show_digit(mnist, 7)
show_digit(mnist, 7)
library(mnist)
mnist <- download_mnist()
show_digit(mnist, 7)
show_digit(mnist, 1)
show_digit(mnist_test, 1)
v<-C("1234")
v<-c("1234")
v
as.numeric(v)
v=as.numeric(v)
v
x=as.numeric(mnist_train[1,1:785])
mean(x)
show_digit(x, 1)
show_digit(as.data.frame( x), 1)
show_digit(as.data.frame(x), 1)
show_digit(x, 1)
show_digit(as.data.frame(x), 1)
show_digit(mnist_train[1,1:785], 1)
show_digit(as.data.frame(x), 1)
median(x)
x
show_digit(mnist_train, 9)
e<-mnist_train[9,1:785]
show_digit(mnist_train, 10)
show_digit(e, 1)
e<-as.numeric(e)
mean(e)
median(e)
cor(e,x)
e<-mnist_train[9,1:786]
e<-mnist_train[9,1:785]
remove(v)
remove(x)
k<-mnist_train[1:60000,785]
x0 = data.frame();x2= data.frame();x4 = data.frame();x5= data.frame();x6 = data.frame();x1= data.frame();x3 = data.frame();
x7 = data.frame();x8 = data.frame();x9 = data.frame();
for( i in 1:60000)
{
if(0==k[i]) { df <- data.frame(mnist_train[i,1:785]);x0<- rbind(x0,df)}
else if(1==k[i]) {df <- data.frame(mnist_train[i,1:785]);x1<- rbind(x1,df)}
else if(2==k[i]) { df <- data.frame(mnist_train[i,1:785]);x2<- rbind(x2,df)}
else if(3==k[i]) { df <- data.frame(mnist_train[i,1:785]);x3<- rbind(x3,df)}
else if(4==k[i]) { df <- data.frame(mnist_train[i,1:785]);x4<- rbind(x4,df)}
else if(5==k[i]) { df <- data.frame(mnist_train[i,1:785]);x5<- rbind(x5,df)}
else if(6==k[i]) { df <- data.frame(mnist_train[i,1:785]);x6<- rbind(x6,df)}
else if(7==k[i]) { df <- data.frame(mnist_train[i,1:785]);x7<- rbind(x7,df)}
else if(8==k[i]) {df <- data.frame(mnist_train[i,1:785]);x8<- rbind(x8,df)}
else if(9==k[i]){ df <- data.frame(mnist_train[i,1:785]);x9<- rbind(x9,df)}
}
x0 = data.frame();x2= data.frame();x4 = data.frame();x5= data.frame();x6 = data.frame();x1= data.frame();x3 = data.frame();
x7 = data.frame();x8 = data.frame();x9 = data.frame();
k<-mnist_train[1:10000,785]
for( i in 1:10000)
{
if(0==k[i]) { df <- data.frame(mnist_train[i,1:785]);x0<- rbind(x0,df)}
else if(1==k[i]) {df <- data.frame(mnist_train[i,1:785]);x1<- rbind(x1,df)}
else if(2==k[i]) { df <- data.frame(mnist_train[i,1:785]);x2<- rbind(x2,df)}
else if(3==k[i]) { df <- data.frame(mnist_train[i,1:785]);x3<- rbind(x3,df)}
else if(4==k[i]) { df <- data.frame(mnist_train[i,1:785]);x4<- rbind(x4,df)}
else if(5==k[i]) { df <- data.frame(mnist_train[i,1:785]);x5<- rbind(x5,df)}
else if(6==k[i]) { df <- data.frame(mnist_train[i,1:785]);x6<- rbind(x6,df)}
else if(7==k[i]) { df <- data.frame(mnist_train[i,1:785]);x7<- rbind(x7,df)}
else if(8==k[i]) {df <- data.frame(mnist_train[i,1:785]);x8<- rbind(x8,df)}
else if(9==k[i]){ df <- data.frame(mnist_train[i,1:785]);x9<- rbind(x9,df)}
}
colmean(x0)
colMeans(x0)
rowMeans(x0)
?data.frame()
x0=data.matrix(x0)
colMeans(x0)
mean(as.matrix(x0))
colMeans(x0)
